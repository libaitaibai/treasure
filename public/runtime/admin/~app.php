<?php  if (!defined('THINK_PATH')) exit(); filter_request($_REQUEST); filter_request($_GET); filter_request($_POST); define("AUTH_NOT_LOGIN", 1); define("AUTH_NOT_AUTH", 2); function conf($name,$value = false) { if($value === false) { return C($name); } else { if(M("Conf")->where("is_effect=1 and name='".$name."'")->count()>0) { if(in_array($name,array('EXPIRED_TIME','SUBMIT_DELAY','SEND_SPAN','WATER_ALPHA','MAX_IMAGE_SIZE','INDEX_LEFT_STORE','INDEX_LEFT_TUAN','INDEX_LEFT_YOUHUI','INDEX_LEFT_DAIJIN','INDEX_LEFT_EVENT','INDEX_RIGHT_STORE','INDEX_RIGHT_TUAN','INDEX_RIGHT_YOUHUI','INDEX_RIGHT_DAIJIN','INDEX_RIGHT_EVENT','SIDE_DEAL_COUNT','DEAL_PAGE_SIZE','PAGE_SIZE','BATCH_PAGE_SIZE','HELP_CATE_LIMIT','HELP_ITEM_LIMIT','REC_HOT_LIMIT','REC_NEW_LIMIT','REC_BEST_LIMIT','REC_CATE_GOODS_LIMIT','SALE_LIST','INDEX_NOTICE_COUNT','RELATE_GOODS_LIMIT'))) { $value = intval($value); } M("Conf")->where("is_effect=1 and name='".$name."'")->setField("value",$value); } C($name,$value); } } function write_timezone($zone='') { if($zone=='') $zone = conf('TIME_ZONE'); $var = array( '0' => 'UTC', '8' => 'PRC', ); $timezone_config_str = "<?php\r\n"; $timezone_config_str .= "return array(\r\n"; $timezone_config_str.="'DEFAULT_TIMEZONE'=>'".$var[$zone]."',\r\n"; $timezone_config_str.=");\r\n"; $timezone_config_str.="?>"; @file_put_contents(get_real_path()."public/timezone_config.php",$timezone_config_str); } function save_log($msg,$status) { if(conf("ADMIN_LOG")==1) { $adm_session = es_session::get(md5(conf("AUTH_KEY"))); $log_data['log_info'] = $msg; $log_data['log_time'] = NOW_TIME; $log_data['log_admin'] = intval($adm_session['adm_id']); $log_data['log_ip'] = CLIENT_IP; $log_data['log_status'] = $status; $log_data['module'] = MODULE_NAME; $log_data['action'] = ACTION_NAME; M("Log")->add($log_data); } } function get_toogle_status($tag,$id,$field) { if($tag) { return "<span class='is_effect' onclick=\"toogle_status(".$id.",this,'".$field."');\">".l("YES")."</span>"; } else { return "<span class='is_effect' onclick=\"toogle_status(".$id.",this,'".$field."');\">".l("NO")."</span>"; } } function get_is_effect($tag,$id) { if($tag) { return "<span class='is_effect' onclick='set_effect(".$id.",this);'>".l("IS_EFFECT_1")."</span>"; } else { return "<span class='is_effect' onclick='set_effect(".$id.",this);'>".l("IS_EFFECT_0")."</span>"; } } function get_is_fictitious($tag,$id) { if($tag) { return "<span class='is_fictitious' onclick='set_fictitious(".$id.",this);'>".l("IS_FICTITIOUS_1")."</span>"; } else { return "<span class='is_fictitious' onclick='set_fictitious(".$id.",this);'>".l("IS_FICTITIOUS_0")."</span>"; } } function get_is_verify($tag,$id) { if($tag) { return "<span class='is_effect' onclick='set_verify(".$id.",this);'>".l("IS_EFFECT_1")."</span>"; } else { return "<span class='is_effect' onclick='set_verify(".$id.",this);'>".l("IS_EFFECT_0")."</span>"; } } function get_sort($sort,$id) { if($tag) { return "<span class='sort_span' onclick='set_sort(".$id.",".$sort.",this);'>".$sort."</span>"; } else { return "<span class='sort_span' onclick='set_sort(".$id.",".$sort.",this);'>".$sort."</span>"; } } function get_nav($nav_id) { return M("RoleNav")->where("id=".$nav_id)->getField("name"); } function get_module($module_id) { return M("RoleModule")->where("id=".$module_id)->getField("module"); } function get_group($group_id) { if($group_data = M("RoleGroup")->where("id=".$group_id)->find()) $group_name = $group_data['name']; else $group_name = L("SYSTEM_NODE"); return $group_name; } function get_role_name($role_id) { return M("Role")->where("id=".$role_id)->getField("name"); } function get_admin_name($admin_id) { $adm_name = M("Admin")->where("id=".$admin_id)->getField("adm_name"); if($adm_name) return $adm_name; else return l("NONE_ADMIN_NAME"); } function get_log_status($status) { return l("LOG_STATUS_".$status); } function check_sort($sort) { if(!is_numeric($sort)) { return false; } return true; } function check_empty($data) { if(strim($data)=='') { return false; } return true; } function set_default($null,$adm_id) { $admin_name = M("Admin")->where("id=".$adm_id)->getField("adm_name"); if($admin_name == conf("DEFAULT_ADMIN")) { return "<span style='color:#f30;'>".l("DEFAULT_ADMIN")."</span>"; } else { return "<a href='".u("Admin/set_default",array("id"=>$adm_id))."'>".l("SET_DEFAULT_ADMIN")."</a>"; } } function get_order_sn($order_id) { return M("DealOrder")->where("id=".$order_id)->getField("order_sn"); } function get_order_sn_with_link($order_id) { $order_info = M("DealOrder")->where("id=".$order_id)->find(); if($order_info['type']==2){ $str = "夺宝订单：<a href='".u("DuobaoOrder/index",array("order_sn"=>$order_info['order_sn']))."'>".$order_info['order_sn']."</a>"; }elseif($order_info['type']==1){ $str = "充值订单：<a href='".u("DealOrder/InchargeOrder",array("order_sn"=>$order_info['order_sn']))."'>".$order_info['order_sn']."</a>"; }elseif ($order_info['type']==3){ $str = "直购订单：<a href='".u("TotalbuyOrder/index",array("order_sn"=>$order_info['order_sn']))."'>".$order_info['order_sn']."</a>"; }elseif ($order_info['type']==4){ $str = "免费购订单：<a href='".u("FreebuyOrder/index",array("order_sn"=>$order_info['order_sn']))."'>".$order_info['order_sn']."</a>"; } if($order_info['is_delete']==1) $str ="<span style='text-decoration:line-through;'>".$str."</span>"; return $str; } function get_user_name($user_id) { $user_name = M("User")->where("id=".$user_id." and is_delete = 0")->getField("user_name"); if(!$user_name) return l("NO_USER"); else return "<a href='".u("User/index",array("user_name"=>$user_name))."'>".$user_name."</a>"; } function get_user_name_js($user_id) { $user_name = M("User")->where("id=".$user_id." and is_delete = 0")->getField("user_name"); if(!$user_name) return l("NO_USER"); else return "<a href='javascript:void(0);' onclick='account(".$user_id.")'>".$user_name."</a>"; } function get_pay_status($status) { return L("PAY_STATUS_".$status); } function get_order_status($s,$order_info) { if($order_info['extra_status']) $extra_status = l("EXTRA_STATUS_".$order_info['extra_status']); if($order_info['after_sale']) $after_sale = l("AFTER_SALE_".$order_info['after_sale']); if($s==1){ $msg = "订单完结"; }elseif($s==2){ $msg = "订单关闭"; }elseif($s==3){ $msg = "已过期"; }else{ $msg = "待处理"; } if($after_sale) $msg.="<br />".$after_sale; if($extra_status) $msg.="<br />".$extra_status; if($order_info['is_delete']==1) $msg.="<br />交易关闭"; return "<div style='text-align:center; '>".$msg."</div>"; } function get_order_status_csv($s,$order_info) { if($order_info['extra_status']) $extra_status = l("EXTRA_STATUS_".$order_info['extra_status']); if($order_info['after_sale']) $after_sale = l("AFTER_SALE_".$order_info['after_sale']); if($s) $msg = "订单完结"; else $msg = "待处理"; if($after_sale) $msg.="\n".$after_sale; if($extra_status) $msg.="\n".$extra_status; if($order_info['is_delete']==1) $msg.="\n用户删除"; return $msg; } function get_notice_info($sn,$notice_id) { $express_name = M()->query("select e.name as ename from ".DB_PREFIX."express as e left join ".DB_PREFIX."delivery_notice as dn on dn.express_id = e.id where dn.id = ".$notice_id); $express_name = $express_name[0]['ename']; if($express_name) $str = $express_name."<br/>".$sn; else $str = $sn; return $str; } function get_payment_name($payment_id) { if($payment_id == '0') { return "优惠币支付"; } else { return M("Payment")->where("id=".$payment_id)->getField("name"); } } function get_delivery_name($delivery_id) { return M("Delivery")->where("id=".$delivery_id)->getField("name"); } function get_lbs_delivery_name($delivery_id) { return M("DeliveryLbs")->where("id=".$delivery_id)->getField("name"); } function get_region_name($region_id) { return M("DeliveryRegion")->where("id=".$region_id)->getField("name"); } function get_city_name($id) { return M("DealCity")->where("id=".$id)->getField("name"); } function get_message_is_effect($status) { return $status==1?l("YES"):l("NO"); } function get_message_type($type_name,$rel_id) { $show_name = M("MessageType")->where("type_name='".$type_name."'")->getField("show_name"); if($type_name=='deal_order') { $order_sn = M("DealOrder")->where("id=".$rel_id)->getField("order_sn"); if($order_sn) return "[".$order_sn."] <a href='".u("DealOrder/deal_index",array("id"=>$rel_id))."'>".$show_name."</a>"; else return $show_name; } elseif($type_name=='deal') { $sub_name = M("Deal")->where("id=".$rel_id)->getField("sub_name"); if($sub_name) return "[".$sub_name."]" .$show_name; else return $show_name; } elseif($type_name=='supplier') { $name = M("Supplier")->where("id=".$rel_id)->getField("name"); if($name) return "[".$name."] <a href='".u("Supplier/index",array("id"=>$rel_id))."'>".$show_name."</a>"; else return $show_name; } else { if($show_name) return $show_name; else return $type_name; } } function get_send_status($status) { return L("SEND_STATUS_".$status); } function get_send_mail_type($deal_id) { if($deal_id>0) return l("DEAL_NOTICE"); else return l("COMMON_NOTICE"); } function get_send_type($send_type) { return l("SEND_TYPE_".$send_type); } function get_all_files( $path ) { $list = array(); $dir = @opendir($path); while (false !== ($file = @readdir($dir))) { if($file!='.'&&$file!='..') if( is_dir( $path.$file."/" ) ){ $list = array_merge( $list , get_all_files( $path.$file."/" ) ); } else { $list[] = $path.$file; } } @closedir($dir); return $list; } function get_order_verify($type) { if($type==0)return "自动确认"; if($type==1)return "人工确认"; } function get_time_status($end_time,$deal) { if($deal['begin_time']>NOW_TIME)return "未开始"; if($deal['end_time']==0)return "不限时"; if($deal['end_time']<NOW_TIME)return "已过期"; return "进行中"; } function get_order_item_name($id) { return M("DealOrderItem")->where("id=".$id)->getField("name"); } function get_location_name($id){ return M('SupplierLocation')->where('id='.$id)->getField('name'); } function get_send_type_msg($status) { if($status==0) { return l("SMS_SEND"); } elseif($status==2) { return '微信'; } elseif($status==3) { return 'andorid'; } elseif($status==4) { return 'ios'; } else { return l("MAIL_SEND"); } } function show_content($content,$id) { return "<a title='".l("VIEW")."' href='javascript:void(0);' onclick='show_content(".$id.")'>".l("VIEW")."</a>"; } function get_is_send($is_send) { if($is_send==0) return L("NO"); else return L("YES"); } function get_send_result($result) { if($result==0) { return L("FAILED"); } else { return L("SUCCESS"); } } function get_is_buy($is_buy) { return l("IS_BUY_".$is_buy); } function get_point($point) { return l("MESSAGE_POINT_".$point); } function get_status($status) { if($status) { return l("YES"); } else return l("NO"); } function getMPageName($page) { return L('MPAGE_'.strtoupper($page)); } function getMTypeName($type,$item) { $cfg = $GLOBALS['mobile_cfg']; $navs = null; foreach($cfg as $k=>$v) { if($v['mobile_type']==$item['mobile_type']) { $navs = $v['nav']; break; } } foreach($navs as $k=>$v) { if($v['type']==$type) { return $v['name']; } } } function getWebTypeName($type,$item) { $cfg = $GLOBALS['web_zt_cfg']; $navs = $cfg['web']['nav']; foreach($navs as $k=>$v) { if($v['type']==$type) { return $v['name']; } } } function get_submit_user($uid) { if($uid==0) return "管理员发布"; else { $uname = M("SupplierAccount")->where("id=".$uid)->getField("account_name"); return $uname?$uname:"商家不存在"; } } function get_event_cate_name($id) { return M("EventCate")->where("id=".$id)->getField("name"); } function show_table_substr($word,$cut=20) { return "<span title='".$word."'>".msubstr($word,0,$cut)."</span>"; } function get_balance_status($status) { return l("BALANCE_".$status); } function do_balance($rel_ids,$deal_id,$memo="") { $deal_info = $GLOBALS['db']->getRow("select * from ".DB_PREFIX."deal where id = ".$deal_id); $now = NOW_TIME; if($deal_info['is_coupon']==1) { $sql = "update ".DB_PREFIX."deal_coupon set is_balance = 2,balance_time = ".$now.",balance_memo = '".$memo."' where id in (".implode(",",$rel_ids).") and is_balance <> 2"; $sql_amount = "select sum(balance_price)+sum(add_balance_price) from ".DB_PREFIX."deal_coupon where id in (".implode(",",$rel_ids).") and is_balance <> 2"; $amount = $GLOBALS['db']->getOne($sql_amount); $GLOBALS['db']->query($sql); $sql_item = "select doi.* from ".DB_PREFIX."deal_order_item as doi where doi.id in(select distinct(dc.order_deal_id) as item_id from ".DB_PREFIX."deal_coupon as dc where dc.id in (".implode(",",$rel_ids)."))"; $item_list = $GLOBALS['db']->getAll($sql_item); foreach($item_list as $k=>$v) { if($deal_info['deal_type']==1) { $GLOBALS['db']->query("update ".DB_PREFIX."deal_order_item set is_balance = 2,balance_time = ".$now.",balance_memo = '".$memo."' where id = ".$v['id']." and is_balance <> 2"); } else { if($GLOBALS['db']->getOne("select count(*) from ".DB_PREFIX."deal_coupon where order_deal_id = ".$v['id']." and is_balance = 2")==$v['number']) { $GLOBALS['db']->query("update ".DB_PREFIX."deal_order_item set is_balance = 2,balance_time = ".$now.",balance_memo = '".$memo."' where id = ".$v['id']." and is_balance <> 2"); } else { $GLOBALS['db']->query("update ".DB_PREFIX."deal_order_item set is_balance = 3,balance_time = ".$now.",balance_memo = '".$memo."' where id = ".$v['id']." and is_balance <> 2"); } } } } else { $sql_amount = "select sum(balance_total_price)+sum(add_balance_price_total) from ".DB_PREFIX."deal_order_item where id in (".implode(",",$rel_ids).") and is_balance <> 2"; $amount = $GLOBALS['db']->getOne($sql_amount); $sql = "update ".DB_PREFIX."deal_order_item set is_balance = 2,balance_time = ".$now.",balance_memo = '".$memo."' where id in (".implode(",",$rel_ids).") and is_balance <> 2"; $GLOBALS['db']->query($sql); } supplier_money_log($deal_info['supplier_id'],$amount, $deal_info['sub_name']."结算 ".$memo); } function getMobileTypeName($type) { $cfg = $GLOBALS['mobile_cfg']; foreach($cfg as $k=>$v) { if($v['mobile_type']==$type) { return $v['name']; } } } function msubstr_name($n) { return msubstr($n,0,40); } function buildPage($type,$args,$total_count,$page = 1,$page_size = 0,$url='',$offset = 5){ $pager['total_count'] = intval($total_count); $pager['page'] = $page; $pager['page_size'] = ($page_size == 0) ? 20 : $page_size; $pager['page_count'] = ($pager['total_count'] > 0) ? ceil($pager['total_count'] / $pager['page_size']) : 1; if ($pager['page'] > $pager['page_count']) $pager['page'] = $pager['page_count']; $pager['limit'] = ($pager['page'] - 1) * $pager['page_size'] . "," . $pager['page_size']; $page_prev = ($pager['page'] > 1) ? $pager['page'] - 1 : 1; $page_next = ($pager['page'] < $pager['page_count']) ? $pager['page'] + 1 : $pager['page_count']; $pager['prev_page'] = $page_prev; $pager['next_page'] = $page_next; if (!empty($url)){ $pager['page_first'] = $url . 1; $pager['page_prev'] = $url . $page_prev; $pager['page_next'] = $url . $page_next; $pager['page_last'] = $url . $pager['page_count']; } else{ $args['page'] = '_page_'; if(!empty($type)){ if(strpos($type,'javascript:') === false){ }else{ $page_url = $type; } }else{ $page_url = 'javascript:;'; } $pager['page_first'] = str_replace('_page_',1,$page_url); $pager['page_prev'] = str_replace('_page_',$page_prev,$page_url); $pager['page_next'] = str_replace('_page_',$page_next,$page_url); $pager['page_last'] = str_replace('_page_',$pager['page_count'],$page_url); } $pager['page_nums'] = array(); if($pager['page_count'] <= $offset * 2){ for ($i=1; $i <= $pager['page_count']; $i++){ $pager['page_nums'][] = array('name' => $i,'url' => empty($url) ? str_replace('_page_',$i,$page_url) : $url . $i); } }else{ if($pager['page'] - $offset < 2){ $temp = $offset * 2; for ($i=1; $i<=$temp; $i++){ $pager['page_nums'][] = array('name' => $i,'url' => empty($url) ? str_replace('_page_',$i,$page_url) : $url . $i); } $pager['page_nums'][] = array('name'=>'...'); $pager['page_nums'][] = array('name' => $pager['page_count'],'url' => empty($url) ? str_replace('_page_',$pager['page_count'],$page_url) : $url . $pager['page_count']); }else{ $pager['page_nums'][] = array('name' => 1,'url' => empty($url) ? str_replace('_page_',1,$page_url) : $url . 1); $pager['page_nums'][] = array('name'=>'...'); $start = $pager['page'] - $offset + 1; $end = $pager['page'] + $offset - 1; if($pager['page_count'] - $end > 1){ for ($i=$start;$i<=$end;$i++){ $pager['page_nums'][] = array('name' => $i,'url' => empty($url) ? str_replace('_page_',$i,$page_url) : $url . $i); } $pager['page_nums'][] = array('name'=>'...'); $pager['page_nums'][] = array('name' => $pager['page_count'],'url' => empty($url) ? str_replace('_page_',$pager['page_count'],$page_url) : $url . $pager['page_count']); }else{ $start = $pager['page_count'] - $offset * 2 + 1; $end = $pager['page_count']; for ($i=$start;$i<=$end;$i++){ $pager['page_nums'][] = array('name' => $i,'url' => empty($url) ? str_replace('_page_',$i,$page_url) : $url . $i); } } } } return $pager; } function get_channel_name($channel_id) { static $channel_names; if(!$channel_names[$channel_id]) { $name = $GLOBALS['db']->getOne("select name from ".DB_PREFIX."channel where id = ".$channel_id); if(!$name)$name="无频道归属"; $channel_names[$channel_id] = $name; } else { $name = $channel_names[$channel_id]; } return $name; } function get_buy_count($buy_count,$deal) { $real_buy_count = $GLOBALS['db']->getOne("select buy_count from ".DB_PREFIX."deal_stock where deal_id = ".$deal['id']); if($real_buy_count==$buy_count) return $buy_count; else return "虚拟".$buy_count.",真实".$real_buy_count; } function show_deal_order_delivery_status($deal_item,$order_info) { if($deal_item['pid']>0) { echo '--'; } else { if($order_info['type']==3){ if($order_info['pay_status']==2){ if($deal_item['delivery_status']==0){ if($deal_item['is_set_consignee']==1||$order_info['is_fictitious']==1){ echo '<a href="'.u("TotalbuyOrder/delivery",array("id"=>$order_info['id'])).'">发货</a>'; } }else{ echo '已发货<br />'; echo '发货单号：'.get_delivery_sn($deal_item['id']).'<br /><br />发货单状态：'.get_delivery_arrival($deal_item['id'])."<br />"; if($deal_item['is_arrival']==0){ echo '<a href="javascript:void(0);" class="do_verify" action="'.u("DealOrder/do_verify",array("order_item_id"=>$deal_item['id'])).'">长期不收货，强制收货</a>'; }else{ echo "订单状态：已收货"; } } }else{ echo '付款未完成'; } }else{ if($deal_item['delivery_status']==0) { if($deal_item['is_set_consignee']==1||$order_info['is_fictitious']==1){ echo '<a href="'.u("DealOrder/delivery",array("id"=>$order_info['id'])).'">发货</a>'; }else{ echo '用户未选择地址'; } }else{ echo '已发货<br />'; echo '发货单号：'.get_delivery_sn($deal_item['id']).'<br /><br />发货单状态：'.get_delivery_arrival($deal_item['id'])."<br />"; if($deal_item['is_arrival']==0){ echo '<a href="javascript:void(0);" class="do_verify" action="'.u("DealOrder/do_verify",array("order_item_id"=>$deal_item['id'])).'">长期不收货，强制收货</a>'; }else{ echo "订单状态：已收货"; } } } } } function get_delivery_sn($deal_order_item_id) { $delivery_notice = M("DeliveryNotice")->where("order_item_id=".$deal_order_item_id)->order("delivery_time desc")->find(); $order_id = M("DealOrderItem")->where("id=".$delivery_notice['order_item_id'])->getField("order_id"); $res = $delivery_notice['notice_sn']; if($delivery_notice['express_id']!=0) { $res.=" <br /><a href='javascript:void(0);' onclick='track_express(\"".$delivery_notice['notice_sn']."\",\"".$delivery_notice['express_id']."\");'>".l("TRACK_EXPRESS")."</a>"; } return $res; } function get_delivery_arrival($deal_order_item_id) { $delivery_notice = M("DeliveryNotice")->where("order_item_id=".$deal_order_item_id)->order("delivery_time desc")->find(); if($delivery_notice['is_arrival']==1) { return l("USER_CONFIRM_DELIVERY"); } elseif($delivery_notice['is_arrival']==2) { return "<span style='color:#f30;'>用户未收到货，维权</span>"; } else { return l("USER_NOT_CONFIRM_DELIVERY"); } } function get_delivery_memo($deal_order_item_id) { return M("DeliveryNotice")->where("order_item_id=".$deal_order_item_id)->getField("memo"); } return array ( 'app_debug' => false, 'app_domain_deploy' => false, 'app_plugin_on' => false, 'app_file_case' => false, 'app_group_depr' => '.', 'app_group_list' => '', 'app_autoload_reg' => false, 'app_autoload_path' => 'Think.Util.,@.COM.', 'app_config_list' => array ( 0 => 'taglibs', 1 => 'routes', 2 => 'tags', 3 => 'htmls', 4 => 'modules', 5 => 'actions', ), 'cookie_expire' => 3600, 'cookie_domain' => '', 'cookie_path' => '/', 'cookie_prefix' => '', 'default_app' => '@', 'default_group' => 'Home', 'default_module' => 'Index', 'default_action' => 'index', 'default_charset' => 'utf-8', 'default_timezone' => 'PRC', 'default_ajax_return' => 'JSON', 'default_theme' => 'default', 'default_lang' => 'zh-cn', 'db_type' => 'mysql', 'db_host' => 'localhost', 'db_name' => 'aaaaaa', 'db_user' => 'aaaaaa', 'db_pwd' => 'aaaaaa', 'db_port' => '3306', 'db_prefix' => 'fanwe_', 'db_suffix' => '', 'db_fieldtype_check' => false, 'db_fields_cache' => true, 'db_charset' => 'utf8', 'db_deploy_type' => 0, 'db_rw_separate' => false, 'data_cache_time' => -1, 'data_cache_compress' => false, 'data_cache_check' => false, 'data_cache_type' => 'File', 'data_cache_path' => './admin/../public/runtime/admin/Temp/', 'data_cache_subdir' => false, 'data_path_level' => 1, 'error_message' => '您浏览的页面暂时发生了错误！请稍后再试～', 'error_page' => '', 'html_cache_on' => false, 'html_cache_time' => 60, 'html_read_type' => 0, 'html_file_suffix' => '.shtml', 'lang_switch_on' => false, 'lang_auto_detect' => true, 'log_record' => false, 'log_file_size' => 2097152, 'log_record_level' => array ( 0 => 'EMERG', 1 => 'ALERT', 2 => 'CRIT', 3 => 'ERR', ), 'page_rollpage' => 5, 'page_listrows' => 30, 'session_auto_start' => true, 'show_run_time' => false, 'show_adv_time' => false, 'show_db_times' => false, 'show_cache_times' => false, 'show_use_mem' => false, 'show_page_trace' => false, 'show_error_msg' => true, 'tmpl_engine_type' => 'Think', 'tmpl_detect_theme' => false, 'tmpl_template_suffix' => '.html', 'tmpl_cachfile_suffix' => '.php', 'tmpl_deny_func_list' => 'echo,exit', 'tmpl_parse_string' => '', 'tmpl_l_delim' => '{', 'tmpl_r_delim' => '}', 'tmpl_var_identify' => 'array', 'tmpl_strip_space' => false, 'tmpl_cache_on' => '1', 'tmpl_cache_time' => -1, 'tmpl_action_error' => 'Public:error', 'tmpl_action_success' => 'Public:success', 'tmpl_trace_file' => './admin/ThinkPHP/Tpl/PageTrace.tpl.php', 'tmpl_exception_file' => './admin/ThinkPHP/Tpl/ThinkException.tpl.php', 'tmpl_file_depr' => '/', 'taglib_begin' => '<', 'taglib_end' => '>', 'taglib_load' => true, 'taglib_build_in' => 'cx', 'taglib_pre_load' => '', 'tag_nested_level' => 3, 'tag_extend_parse' => '', 'token_on' => 0, 'token_name' => '__hash__', 'token_type' => 'md5', 'url_case_insensitive' => false, 'url_router_on' => false, 'url_dispatch_on' => true, 'url_model' => '0', 'url_pathinfo_model' => 2, 'url_pathinfo_depr' => '/', 'url_html_suffix' => '', 'var_group' => 'g', 'var_module' => 'm', 'var_action' => 'a', 'var_router' => 'r', 'var_page' => 'p', 'var_template' => 't', 'var_language' => 'l', 'var_ajax_submit' => 'ajax', 'var_pathinfo' => 's', 'default_admin' => 'admin', 'time_zone' => '8', 'admin_log' => '1', 'db_version' => '2.0', 'db_vol_maxsize' => '8000000', 'water_mark' => './public/attachment/201011/4cdde85a27105.gif', 'currency_unit' => '夺宝币', 'big_width' => '500', 'big_height' => '500', 'small_width' => '200', 'small_height' => '200', 'water_alpha' => '50', 'water_position' => '4', 'max_image_size' => '2000000', 'max_file_size' => '1', 'allow_file_ext' => '1', 'bg_color' => '#ffffff', 'is_water_mark' => '1', 'template' => 'fanwe', 'score_unit' => '积分', 'user_verify' => '1', 'shop_logo' => './public/attachment/201902/25/11/5c735e22302ec.png', 'shop_lang' => 'zh-cn', 'shop_title' => '一元夺宝', 'shop_keyword' => '一元夺宝', 'shop_description' => '一元夺宝', 'shop_tel' => '15107930900', 'side_deal_count' => '3', 'side_message_count' => '3', 'online_qq' => '800005515|800005515', 'online_time' => '周一至周六 9:00-18:00', 'shop_footer' => '<div style=\\"text-align:center;\\">紫豪网络</div>
', 'mail_send_payment' => '0', 'sms_send_payment' => '0', 'reply_address' => '8888@qq.com', 'mail_send_delivery' => '0', 'sms_send_delivery' => '0', 'mail_on' => '1', 'sms_on' => '1', 'batch_page_size' => '500', 'submit_delay' => '5', 'footer_logo' => './public/attachment/201902/25/11/5c735e3d75052.png', 'gzip_on' => '1', 'integrate_code' => '', 'integrate_cfg' => '', 'shop_seo_title' => '一元夺宝', 'cache_on' => '1', 'expired_time' => '0', 'filter_word' => '', 'style_default' => '1', 'tmpl_domain_root' => '', 'icp_license' => '', 'count_code' => '', 'kuaidi_app_key' => '', 'kuaidi_type' => '2', 'send_span' => '2', 'user_login_score' => '1', 'user_register_score' => '2', 'domain_root' => '', 'verify_image' => '0', 'user_invite_score' => '2', 'user_login_keep_score' => '2', 'user_active_score' => '1', 'user_active_score_max' => '100', 'apple_path' => 'ios', 'android_path' => 'android', 'tencent_map_appkey' => 'YKCBZ-OKT3G-VLAQY-IWFUI-TRR55-PWFEX', 'weixin_appid' => '', 'weixin_appscecret' => '', 'page_size' => '10', 'deal_page_size' => '20', 'help_item_limit' => '4', 'help_cate_limit' => '4', 'robot_logo_sort' => '0', 'user_register_money' => '1', 'mnav_sort' => 'a:5:{s:11:\\"click_count\\";a:4:{s:11:\\"config_name\\";s:11:\\"click_count\\";s:4:\\"name\\";s:6:\\"人气\\";s:9:\\"is_effect\\";s:1:\\"1\\";s:4:\\"sort\\";s:1:\\"1\\";}s:4:\\"sort\\";a:4:{s:11:\\"config_name\\";s:4:\\"sort\\";s:4:\\"name\\";s:6:\\"推荐\\";s:9:\\"is_effect\\";s:1:\\"1\\";s:4:\\"sort\\";s:1:\\"2\\";}s:11:\\"create_time\\";a:4:{s:11:\\"config_name\\";s:11:\\"create_time\\";s:4:\\"name\\";s:6:\\"最新\\";s:9:\\"is_effect\\";s:1:\\"1\\";s:4:\\"sort\\";s:1:\\"3\\";}s:8:\\"progress\\";a:4:{s:11:\\"config_name\\";s:8:\\"progress\\";s:4:\\"name\\";s:6:\\"进度\\";s:9:\\"is_effect\\";s:1:\\"1\\";s:4:\\"sort\\";s:1:\\"4\\";}s:7:\\"max_buy\\";a:4:{s:11:\\"config_name\\";s:7:\\"max_buy\\";s:4:\\"name\\";s:12:\\"总需人次\\";s:9:\\"is_effect\\";s:1:\\"1\\";s:4:\\"sort\\";s:1:\\"5\\";}}', 'user_register_coupons_days' => '7', 'user_register_coupons_account' => '0', 'user_invite_coupons_account' => '0', 'user_change_logo_coupons' => '0', 'split_red_money' => '0', 'wb_app_key' => '', 'wb_app_secret' => '', 'qq_hl_appid' => '', 'qq_hl_appkey' => '', 'app_name' => '方维一元夺宝系统  fanwe.com ', 'app_sub_ver' => 2800, 'auth_key' => 'fanwe', 'allow_image_ext' => 'jpg,gif,png,jpeg', '_taglibs_' => array ( 'html' => '@.TagLib.TagLibHtml', ), ); ?>